// <auto-generated />
using System;
using EasySales.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EasySales.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230705181418_Cambios_Factura_FacturaDetalle_SucursalUsuario")]
    partial class Cambios_Factura_FacturaDetalle_SucursalUsuario
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EasySales.Shared.Cajas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Abierta")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("ScurusalId")
                        .HasColumnType("int");

                    b.Property<int>("TipoModificacionId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("longtext");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Cajas");
                });

            modelBuilder.Entity("EasySales.Shared.CategoriaProductos", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("TipoModificacionId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("TipoModificacionId");

                    b.ToTable("CategoriaProductos");
                });

            modelBuilder.Entity("EasySales.Shared.Clientes", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NumeroIdentificacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TipoIdentificacionId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoModificacionId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("TipoIdentificacionId");

                    b.HasIndex("TipoModificacionId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("EasySales.Shared.DepartamentoEmpresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("TipoModificacionId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("TipoModificacionId");

                    b.ToTable("DepartamentoEmpresa");
                });

            modelBuilder.Entity("EasySales.Shared.EasySalesServerRoles", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<int?>("TipoModificacionId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("EasySales.Shared.EasySalesServerUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NumeroIdentificacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<int>("SucursalId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoModificacionId")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("EasySales.Shared.Empleados", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DepartamentoEmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EmailConfirmado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FotoPath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("GeneroId")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NumeroIdentificacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PuestoLaboralId")
                        .HasColumnType("int");

                    b.Property<int>("SucursalId")
                        .HasColumnType("int");

                    b.Property<int>("TipoIdentificacionId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoModificacionId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoEmpresaId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("GeneroId");

                    b.HasIndex("PuestoLaboralId");

                    b.HasIndex("SucursalId");

                    b.HasIndex("TipoIdentificacionId");

                    b.HasIndex("TipoModificacionId");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("EasySales.Shared.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NombreComercial")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NumeroRuc")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RegimenEmpresarialId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoModificacionId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("RegimenEmpresarialId");

                    b.HasIndex("TipoModificacionId");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("EasySales.Shared.EstadosFactura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("TipoModificacionId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("TipoModificacionId");

                    b.ToTable("EstadosFactura");
                });

            modelBuilder.Entity("EasySales.Shared.FacturaDetalle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<decimal?>("DescuentoValor")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoFacturaId")
                        .HasColumnType("int");

                    b.Property<long>("FacturaId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("Impuestos")
                        .HasColumnType("decimal(65,30)");

                    b.Property<long>("ProductoId")
                        .HasColumnType("bigint");

                    b.Property<int?>("PromocionId")
                        .HasColumnType("int");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("TipoModificacionId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("FacturaDetalle");
                });

            modelBuilder.Entity("EasySales.Shared.Facturas", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int?>("CajaId")
                        .HasColumnType("int");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("DescuentoValor")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("EmpresaID")
                        .HasColumnType("int");

                    b.Property<int>("EstadoFacturaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Impuestos")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("NumeroFactura")
                        .HasColumnType("longtext");

                    b.Property<int?>("PromocionId")
                        .HasColumnType("int");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("SucursalId")
                        .HasColumnType("int");

                    b.Property<int>("TipoModificacionId")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EmpresaID");

                    b.HasIndex("EstadoFacturaId");

                    b.HasIndex("SucursalId");

                    b.HasIndex("TipoModificacionId");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("EasySales.Shared.Generos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("TipoModificacionId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("TipoModificacionId");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("EasySales.Shared.Moneda", b =>
                {
                    b.Property<string>("CodigoIsoAlpha2Code")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TipoModificacionId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("longtext");

                    b.HasKey("CodigoIsoAlpha2Code");

                    b.ToTable("Moneda");
                });

            modelBuilder.Entity("EasySales.Shared.ParametrosSistema", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("TipoModificacionId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("ValorNumerico")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("ValorString")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("TipoModificacionId");

                    b.ToTable("ParametrosSistema");
                });

            modelBuilder.Entity("EasySales.Shared.Productos", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("AplicaIVA")
                        .IsRequired()
                        .HasColumnType("tinyint(1)");

                    b.Property<long?>("CategoriaProductosId")
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<bool>("EsServicio")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FotoPath")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("PrecioCosto")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("PrecioVenta")
                        .HasColumnType("decimal(65,30)");

                    b.Property<long?>("SubCategoriaProductosId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TipoModificacionId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaProductosId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("SubCategoriaProductosId");

                    b.HasIndex("TipoModificacionId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("EasySales.Shared.PuestoLaboral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("TipoModificacionId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("TipoModificacionId");

                    b.ToTable("PuestoLaboral");
                });

            modelBuilder.Entity("EasySales.Shared.RegimenEmpresarial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("TipoModificacionId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("TipoModificacionId");

                    b.ToTable("RegimenEmpresarial");
                });

            modelBuilder.Entity("EasySales.Shared.SubCategoriaProductos", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<long?>("CategoriaProductosId")
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("TipoModificacionId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaProductosId");

                    b.HasIndex("TipoModificacionId");

                    b.ToTable("SubCategoriaProductos");
                });

            modelBuilder.Entity("EasySales.Shared.Sucursales", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DireccionFisica")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NumeroTelefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("TipoModificacionId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("TipoModificacionId");

                    b.ToTable("Sucursales");
                });

            modelBuilder.Entity("EasySales.Shared.TasaCambioCompra", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("MonedaBaseId")
                        .HasColumnType("int");

                    b.Property<int>("MonedaCambioId")
                        .HasColumnType("int");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(65,30)");

                    b.Property<long>("TasaCambioOficialId")
                        .HasColumnType("bigint");

                    b.Property<int>("TipoModificacionId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TasaCambioCompra");
                });

            modelBuilder.Entity("EasySales.Shared.TasaCambioOficial", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("MonedaBaseId")
                        .HasColumnType("int");

                    b.Property<int?>("MonedaCambioId")
                        .HasColumnType("int");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("TipoModificacionId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TasaCambioOficial");
                });

            modelBuilder.Entity("EasySales.Shared.TasaCambioVenta", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("MonedaBaseId")
                        .HasColumnType("int");

                    b.Property<int>("MonedaCambioId")
                        .HasColumnType("int");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(65,30)");

                    b.Property<long>("TasaCambioOficialId")
                        .HasColumnType("bigint");

                    b.Property<int>("TipoModificacionId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TasaCambioVenta");
                });

            modelBuilder.Entity("EasySales.Shared.TipoIdentificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TipoModificacionId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("TipoModificacionId");

                    b.ToTable("TipoIdentificacion");
                });

            modelBuilder.Entity("EasySales.Shared.TipoModificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CodigoInterno")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("TipoModificacionId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TipoModificacion");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("EasySales.Shared.CategoriaProductos", b =>
                {
                    b.HasOne("EasySales.Shared.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId");

                    b.HasOne("EasySales.Shared.TipoModificacion", "TipoModificacion")
                        .WithMany()
                        .HasForeignKey("TipoModificacionId");

                    b.Navigation("Empresa");

                    b.Navigation("TipoModificacion");
                });

            modelBuilder.Entity("EasySales.Shared.Clientes", b =>
                {
                    b.HasOne("EasySales.Shared.TipoIdentificacion", "TipoIdentificacion")
                        .WithMany()
                        .HasForeignKey("TipoIdentificacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasySales.Shared.TipoModificacion", "TipoModificacion")
                        .WithMany()
                        .HasForeignKey("TipoModificacionId");

                    b.Navigation("TipoIdentificacion");

                    b.Navigation("TipoModificacion");
                });

            modelBuilder.Entity("EasySales.Shared.DepartamentoEmpresa", b =>
                {
                    b.HasOne("EasySales.Shared.TipoModificacion", "TipoModificacion")
                        .WithMany()
                        .HasForeignKey("TipoModificacionId");

                    b.Navigation("TipoModificacion");
                });

            modelBuilder.Entity("EasySales.Shared.Empleados", b =>
                {
                    b.HasOne("EasySales.Shared.DepartamentoEmpresa", "DepartamentoEmpresa")
                        .WithMany()
                        .HasForeignKey("DepartamentoEmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasySales.Shared.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasySales.Shared.Generos", "Genero")
                        .WithMany()
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasySales.Shared.PuestoLaboral", "PuestoLaboral")
                        .WithMany()
                        .HasForeignKey("PuestoLaboralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasySales.Shared.Sucursales", "Sucursal")
                        .WithMany()
                        .HasForeignKey("SucursalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasySales.Shared.TipoIdentificacion", "TipoIdentificacion")
                        .WithMany()
                        .HasForeignKey("TipoIdentificacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasySales.Shared.TipoModificacion", "TipoModificacion")
                        .WithMany()
                        .HasForeignKey("TipoModificacionId");

                    b.Navigation("DepartamentoEmpresa");

                    b.Navigation("Empresa");

                    b.Navigation("Genero");

                    b.Navigation("PuestoLaboral");

                    b.Navigation("Sucursal");

                    b.Navigation("TipoIdentificacion");

                    b.Navigation("TipoModificacion");
                });

            modelBuilder.Entity("EasySales.Shared.Empresa", b =>
                {
                    b.HasOne("EasySales.Shared.RegimenEmpresarial", "RegimenEmpresarial")
                        .WithMany()
                        .HasForeignKey("RegimenEmpresarialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasySales.Shared.TipoModificacion", "TipoModificacion")
                        .WithMany()
                        .HasForeignKey("TipoModificacionId");

                    b.Navigation("RegimenEmpresarial");

                    b.Navigation("TipoModificacion");
                });

            modelBuilder.Entity("EasySales.Shared.EstadosFactura", b =>
                {
                    b.HasOne("EasySales.Shared.TipoModificacion", "TipoModificacion")
                        .WithMany()
                        .HasForeignKey("TipoModificacionId");

                    b.Navigation("TipoModificacion");
                });

            modelBuilder.Entity("EasySales.Shared.Facturas", b =>
                {
                    b.HasOne("EasySales.Shared.Clientes", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasySales.Shared.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasySales.Shared.EstadosFactura", "EstadoFactura")
                        .WithMany()
                        .HasForeignKey("EstadoFacturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasySales.Shared.Sucursales", "Sucursal")
                        .WithMany()
                        .HasForeignKey("SucursalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasySales.Shared.TipoModificacion", "TipoModificacion")
                        .WithMany()
                        .HasForeignKey("TipoModificacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Empresa");

                    b.Navigation("EstadoFactura");

                    b.Navigation("Sucursal");

                    b.Navigation("TipoModificacion");
                });

            modelBuilder.Entity("EasySales.Shared.Generos", b =>
                {
                    b.HasOne("EasySales.Shared.TipoModificacion", "TipoModificacion")
                        .WithMany()
                        .HasForeignKey("TipoModificacionId");

                    b.Navigation("TipoModificacion");
                });

            modelBuilder.Entity("EasySales.Shared.ParametrosSistema", b =>
                {
                    b.HasOne("EasySales.Shared.TipoModificacion", "TipoModificacion")
                        .WithMany()
                        .HasForeignKey("TipoModificacionId");

                    b.Navigation("TipoModificacion");
                });

            modelBuilder.Entity("EasySales.Shared.Productos", b =>
                {
                    b.HasOne("EasySales.Shared.CategoriaProductos", "CategoriaProductos")
                        .WithMany()
                        .HasForeignKey("CategoriaProductosId");

                    b.HasOne("EasySales.Shared.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasySales.Shared.SubCategoriaProductos", "SubCategoriaProductos")
                        .WithMany()
                        .HasForeignKey("SubCategoriaProductosId");

                    b.HasOne("EasySales.Shared.TipoModificacion", "TipoModificacion")
                        .WithMany()
                        .HasForeignKey("TipoModificacionId");

                    b.Navigation("CategoriaProductos");

                    b.Navigation("Empresa");

                    b.Navigation("SubCategoriaProductos");

                    b.Navigation("TipoModificacion");
                });

            modelBuilder.Entity("EasySales.Shared.PuestoLaboral", b =>
                {
                    b.HasOne("EasySales.Shared.TipoModificacion", "TipoModificacion")
                        .WithMany()
                        .HasForeignKey("TipoModificacionId");

                    b.Navigation("TipoModificacion");
                });

            modelBuilder.Entity("EasySales.Shared.RegimenEmpresarial", b =>
                {
                    b.HasOne("EasySales.Shared.TipoModificacion", "TipoModificacion")
                        .WithMany()
                        .HasForeignKey("TipoModificacionId");

                    b.Navigation("TipoModificacion");
                });

            modelBuilder.Entity("EasySales.Shared.SubCategoriaProductos", b =>
                {
                    b.HasOne("EasySales.Shared.CategoriaProductos", "CategoriaProductos")
                        .WithMany()
                        .HasForeignKey("CategoriaProductosId");

                    b.HasOne("EasySales.Shared.TipoModificacion", "TipoModificacion")
                        .WithMany()
                        .HasForeignKey("TipoModificacionId");

                    b.Navigation("CategoriaProductos");

                    b.Navigation("TipoModificacion");
                });

            modelBuilder.Entity("EasySales.Shared.Sucursales", b =>
                {
                    b.HasOne("EasySales.Shared.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasySales.Shared.TipoModificacion", "TipoModificacion")
                        .WithMany()
                        .HasForeignKey("TipoModificacionId");

                    b.Navigation("Empresa");

                    b.Navigation("TipoModificacion");
                });

            modelBuilder.Entity("EasySales.Shared.TipoIdentificacion", b =>
                {
                    b.HasOne("EasySales.Shared.TipoModificacion", "TipoModificacion")
                        .WithMany()
                        .HasForeignKey("TipoModificacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoModificacion");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("EasySales.Shared.EasySalesServerRoles", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("EasySales.Shared.EasySalesServerUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("EasySales.Shared.EasySalesServerUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("EasySales.Shared.EasySalesServerRoles", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasySales.Shared.EasySalesServerUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("EasySales.Shared.EasySalesServerUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}

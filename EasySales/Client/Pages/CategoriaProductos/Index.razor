@page "/categoriaproductos"
@using EasySales.Client.Services
@using EasySales.Shared
<h3>Categoria de Productos.</h3>

<style>
    .e-spinner-pane .e-spinner-inner .e-spin-bootstrap5 {
        stroke: green;
    }
</style>

<PageTitle>Categorias</PageTitle>

<SfSpinner Label="Cargando Datos, Por Favor Espere." Size="50" Type="SpinnerType.Bootstrap5" @bind-Visible="SpinnerVisible">
</SfSpinner>

@{
    var SearchColumns = new string[] { "Nombre", "Descripcion" };
}

@if (categoriaProductos != null)
{
    <SfGrid DataSource="@categoriaProductos" AllowPaging=true AllowSorting=true AllowMultiSorting=false AllowFiltering=true
        Toolbar="@(new List<string>() { "Add", "Edit", "Update", "Delete", "Cancel","Search"})" TValue="CategoriaProductos">
        <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true" Mode="EditMode.Normal"></GridEditSettings>
        <GridEvents OnActionBegin="ActionBeginHandler" TValue="CategoriaProductos"></GridEvents>
        <GridSearchSettings Fields="@SearchColumns"></GridSearchSettings>
        <GridPageSettings PageSize="10"></GridPageSettings>
        <GridFilterSettings Mode="FilterBarMode.Immediate" Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
        <GridColumns>
            <GridColumn AllowSorting=false AllowAdding=false IsPrimaryKey=true Visible="false" Field=@nameof(CategoriaProductos.Id) HeaderText="ID" AllowFiltering=false></GridColumn>
            <GridColumn Field=@nameof(CategoriaProductos.Nombre) HeaderText="Nombre" Width="150" FilterSettings="@(new FilterSettings() {Operator=Operator.Contains})"></GridColumn>
            <GridColumn Field=@nameof(CategoriaProductos.Descripcion) HeaderText="Descripcion" Width="300" FilterSettings="@(new FilterSettings() {Operator=Operator.Contains})"></GridColumn>
            <GridColumn Field=@nameof(CategoriaProductos.Activo) HeaderText="Activo" DisplayAsCheckBox="true" DefaultValue="true" HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Center" EditType="EditType.BooleanEdit"></GridColumn>
            <GridColumn Field=@nameof(CategoriaProductos.FechaCreacion) Visible="false" HeaderText="Fecha Creacion" DefaultValue="@DateTime.Now" EditType="EditType.DateTimePickerEdit"></GridColumn>
            <GridColumn Field=@nameof(CategoriaProductos.UsuarioCreacion) Visible="false" HeaderText="Usuario Creacion" DefaultValue="@defaultUser"></GridColumn>
            <GridColumn Field=@nameof(CategoriaProductos.EmpresaId) Visible="false" HeaderText="Empresa" DefaultValue="@(2)"></GridColumn>
        </GridColumns>
    </SfGrid>
}

@code {
    [Inject]
    public ICategoriaProductosService CategoriaProductosService { get; set; }
    public IEnumerable<CategoriaProductos> categoriaProductos { get; set; }

    public bool SpinnerVisible { get; set; }
    public SfGrid<CategoriaProductos> categoriaProductosGrid { get; set; }
    public string defaultUser = "Sitema";

    protected override async Task OnInitializedAsync()
    {
        this.SpinnerVisible = true;
        categoriaProductos = (await CategoriaProductosService.CargarDatos()).ToList();
        this.SpinnerVisible = false;
    }

    public async void ActionBeginHandler(ActionEventArgs<CategoriaProductos> Args)
    {
        if (Args.RequestType.Equals(Syncfusion.Blazor.Grids.Action.Save))
        {
            if (Args.Action == "Add")
            {
                await CategoriaProductosService.Agregar(Args.Data);
                categoriaProductos = (await CategoriaProductosService.CargarDatos()).ToList();
                categoriaProductosGrid.Refresh();
            }
            else
            {
                await CategoriaProductosService.Modificar(Args.Data);
            }
        }
        if (Args.RequestType.Equals(Syncfusion.Blazor.Grids.Action.Delete))
        {
            await CategoriaProductosService.Eliminar(Args.Data.Id);
        }
    }

}

